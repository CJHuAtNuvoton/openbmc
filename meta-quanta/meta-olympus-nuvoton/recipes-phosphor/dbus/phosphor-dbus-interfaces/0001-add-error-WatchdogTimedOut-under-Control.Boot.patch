From 7fb5a69686ddd7775fbf488213dd0e7332b79928 Mon Sep 17 00:00:00 2001
From: Stanley Chu <yschu@nuvoton.com>
Date: Tue, 20 Oct 2020 16:05:33 +0800
Subject: [PATCH] add watchdog error yaml

---
 gen/xyz/openbmc_project/Control/Boot/meson.build | 13 +++++++++++++
 gen/xyz/openbmc_project/Control/meson.build      | 14 ++++++++++++++
 xyz/openbmc_project/Control/Boot.errors.yaml     |  6 ++++++
 xyz/openbmc_project/Control/Boot.metadata.yaml   | 11 +++++++++++
 4 files changed, 44 insertions(+)
 create mode 100644 xyz/openbmc_project/Control/Boot.errors.yaml
 create mode 100644 xyz/openbmc_project/Control/Boot.metadata.yaml

diff --git a/gen/xyz/openbmc_project/Control/Boot/meson.build b/gen/xyz/openbmc_project/Control/Boot/meson.build
index ba8a19f..98c0d30 100644
--- a/gen/xyz/openbmc_project/Control/Boot/meson.build
+++ b/gen/xyz/openbmc_project/Control/Boot/meson.build
@@ -1,4 +1,17 @@
 # Generated file; do not modify.
+generated_sources += custom_target(
+    'xyz/openbmc_project/Control/Boot__cpp'.underscorify(),
+    input: [ meson.source_root() / 'xyz/openbmc_project/Control/Boot.errors.yaml',  ],
+    output: [ 'error.cpp', 'error.hpp',  ],
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'cpp',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.source_root(),
+        'xyz/openbmc_project/Control/Boot',
+    ],
+)
+
 subdir('Mode')
 generated_others += custom_target(
     'xyz/openbmc_project/Control/Boot/Mode__markdown'.underscorify(),
diff --git a/gen/xyz/openbmc_project/Control/meson.build b/gen/xyz/openbmc_project/Control/meson.build
index f3be44c..d6c4343 100644
--- a/gen/xyz/openbmc_project/Control/meson.build
+++ b/gen/xyz/openbmc_project/Control/meson.build
@@ -1,5 +1,19 @@
 # Generated file; do not modify.
 subdir('Boot')
+generated_others += custom_target(
+    'xyz/openbmc_project/Control/Boot__markdown'.underscorify(),
+    input: [ meson.source_root() / 'xyz/openbmc_project/Control/Boot.errors.yaml',  ],
+    output: [ 'Boot.md' ],
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'markdown',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.source_root(),
+        'xyz/openbmc_project/Control/Boot',
+    ],
+    build_by_default: true,
+)
+
 subdir('CFMLimit')
 generated_others += custom_target(
     'xyz/openbmc_project/Control/CFMLimit__markdown'.underscorify(),
diff --git a/xyz/openbmc_project/Control/Boot.errors.yaml b/xyz/openbmc_project/Control/Boot.errors.yaml
new file mode 100644
index 0000000..47eeca5
--- /dev/null
+++ b/xyz/openbmc_project/Control/Boot.errors.yaml
@@ -0,0 +1,6 @@
+# xyz.openbmc_project.Control.Boot.Error.Checkstop
+ - name: Checkstop
+   description: Host boot hang.
+# xyz.openbmc_project.Control.Boot.Error.WatchdogTimedOut
+ - name: WatchdogTimedOut
+   description: Watchdog time out triggered while Host booting.
diff --git a/xyz/openbmc_project/Control/Boot.metadata.yaml b/xyz/openbmc_project/Control/Boot.metadata.yaml
new file mode 100644
index 0000000..d23251b
--- /dev/null
+++ b/xyz/openbmc_project/Control/Boot.metadata.yaml
@@ -0,0 +1,11 @@
+- name: WatchdogTimedOut
+  level: ERR
+  meta:
+    - str: WATCHDOG_ACTION=%s
+      type: string
+
+    - str: WATCHDOG_TIMER_USE=%s
+      type: string
+
+    - str: WATCHDOG_INTERVAL=%llu
+      type: uint64
-- 
2.17.1

