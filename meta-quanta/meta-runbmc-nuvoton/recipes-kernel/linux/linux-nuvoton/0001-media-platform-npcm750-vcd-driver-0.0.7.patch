From a06bbdc093017b1465582d3dfaab7e6e8e6c57d0 Mon Sep 17 00:00:00 2001
From: kwliu <kwliu@nuvoton.com>
Date: Fri, 19 Jul 2019 14:22:20 +0800
Subject: [PATCH] media: platform: npcm750: vcd: driver 0.0.7

Only enable interrupt while capturing and comparing.

Signed-off-by: kwliu <kwliu@nuvoton.com>
---
 drivers/media/platform/nuvoton/npcm750_vcd.c | 30 ++++++--------------
 1 file changed, 9 insertions(+), 21 deletions(-)

diff --git a/drivers/media/platform/nuvoton/npcm750_vcd.c b/drivers/media/platform/nuvoton/npcm750_vcd.c
index aa5d875a1167..7e5bdfd73c91 100644
--- a/drivers/media/platform/nuvoton/npcm750_vcd.c
+++ b/drivers/media/platform/nuvoton/npcm750_vcd.c
@@ -32,7 +32,7 @@
 #include <asm/fb.h>
 #include <linux/completion.h>
 
-#define VCD_VERSION "0.0.6"
+#define VCD_VERSION "0.0.7"
 
 #define VCD_IOC_MAGIC     'v'
 #define VCD_IOCGETINFO	_IOR(VCD_IOC_MAGIC,  1, struct vcd_info)
@@ -142,7 +142,6 @@
 #define  VCD_INTE_HSYNC_IE	BIT(11)
 #define  VCD_INTE_BSD2_IE	BIT(12)
 #define  VCD_INTE_BSD3_IE	BIT(13)
-#define  VCD_INTE_VAL	(VCD_INTE_DONE_IE)
 
 #define VCD_RCHG	0x8028
 #define VCD_RCHG_TIM_PRSCL_OFFSET 9
@@ -549,14 +548,6 @@ static int npcm750_vcd_reset(struct npcm750_vcd *vcd)
 	return 0;
 }
 
-static void npcm750_vcd_io_reset(struct npcm750_vcd *vcd)
-{
-	npcm750_vcd_write(vcd, VCD_INTE, 0);
-	npcm750_vcd_write(vcd, VCD_STAT, VCD_STAT_CLEAR);
-	npcm750_vcd_reset(vcd);
-	npcm750_vcd_write(vcd, VCD_INTE, VCD_INTE_VAL);
-}
-
 static void npcm750_vcd_dehs(struct npcm750_vcd *vcd, int is_de)
 {
 	struct regmap *gcr = vcd->gcr_regmap;
@@ -680,9 +671,6 @@ static int npcm750_vcd_get_resolution(struct npcm750_vcd *vcd)
 		(vcd->info.pixelclk != npcm750_vcd_pclk(vcd)) ||
 		(vcd->info.mode != npcm750_vcd_is_mga(vcd))) {
 
-		npcm750_vcd_write(vcd, VCD_INTE, 0);
-		npcm750_vcd_write(vcd, VCD_STAT, VCD_STAT_CLEAR);
-
 		if (npcm750_vcd_hres(vcd) && npcm750_vcd_vres(vcd)) {
 			struct regmap *gfxi = vcd->gfx_regmap;
 			u32 dispst;
@@ -698,9 +686,6 @@ static int npcm750_vcd_get_resolution(struct npcm750_vcd *vcd)
 		/* setup resolution change detect register*/
 		npcm750_vcd_detect_video_mode(vcd);
 
-		/* enable interrupt */
-		npcm750_vcd_write(vcd, VCD_INTE, VCD_INTE_VAL);
-
 		return 1;
 	}
 	return 0;
@@ -917,9 +902,6 @@ static int npcm750_vcd_init(struct npcm750_vcd *vcd)
 	/* Detect video mode */
 	npcm750_vcd_detect_video_mode(vcd);
 
-	/* Enable interrupt */
-	npcm750_vcd_write(vcd, VCD_INTE, VCD_INTE_VAL);
-
 	if (!vcd->de_mode) {
 		npcm750_vcd_update(vcd, VCD_RCHG, VCD_RCHG_TIM_PRSCL,
 			0x01 << VCD_RCHG_TIM_PRSCL_OFFSET);
@@ -1109,16 +1091,22 @@ npcm750_do_vcd_ioctl(struct npcm750_vcd *vcd, unsigned int cmd,
 			vcd->status = 0;
 			reinit_completion(&vcd->complete);
 
+			npcm750_vcd_write(vcd, VCD_STAT, VCD_STAT_CLEAR);
+			npcm750_vcd_write(vcd, VCD_INTE, VCD_INTE_DONE_IE);
+
 			npcm750_vcd_command(vcd, vcd_cmd);
 			timeout = wait_for_completion_interruptible_timeout(&vcd->complete,
 			    VCD_OP_TIMEOUT);
+
+			npcm750_vcd_write(vcd, VCD_INTE, 0);
+
 			if (!timeout || !npcm750_vcd_op_done(vcd)) {
 				dev_dbg(vcd->dev, "VCD_OP_BUSY\n");
 
 				if (vcd->status == 0)
 					vcd->status = npcm750_vcd_read(vcd, VCD_STAT);
 
-				npcm750_vcd_io_reset(vcd);
+				npcm750_vcd_reset(vcd);
 				ret = copy_to_user(argp, &vcd->status, sizeof(vcd->status))
 					? -EFAULT : 0;
 				if (!ret)
@@ -1190,7 +1178,7 @@ npcm750_do_vcd_ioctl(struct npcm750_vcd *vcd, unsigned int cmd,
 		break;
 	}
 	case VCD_IOCRESET:
-		npcm750_vcd_io_reset(vcd);
+		npcm750_vcd_reset(vcd);
 
 		break;
 	case VCD_GETREG:
-- 
2.17.1

